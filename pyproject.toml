[project]
name = "lineagent"
version = "0.1.0"
description = "Agentic approach for data lineage parsing across various data processing script types"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "anthropic>=0.49.0",
    "autogen-agentchat>=0.4.9.2",
    "autogen-ext[grpc,mcp,ollama,openai]>=0.4.9.2",
    "bs4>=0.0.2",
    "gradio>=5.22.0",
    "httpx>=0.28.1",
    "ipykernel>=6.29.5",
    "ipython>=8.0.0,<9.0.0",
    "ipywidgets>=8.1.5",
    "jupyter>=1.1.1",
    "langchain-anthropic>=0.3.10",
    "langchain-community>=0.3.20",
    "langchain-experimental>=0.3.4",
    "langchain-openai>=0.3.9",
    "langgraph>=0.3.18",
    "langgraph-checkpoint-sqlite>=2.0.6",
    "langsmith>=0.3.18",
    "lxml>=5.3.1",
    "mcp-server-fetch>=2025.1.17",
    "mcp[cli]>=1.5.0",
    "mysql-connector-python>=8.0.0",
    "nbformat>=4.2.0",
    "openai>=1.68.2",
    "openai-agents>=0.0.15",
    "playwright>=1.51.0",
    "plotly>=6.0.1",
    "polygon-api-client>=1.14.5",
    "psutil>=7.0.0",
    "pypdf>=5.4.0",
    "pypdf2>=3.0.1",
    "python-dotenv>=1.0.1",
    "requests>=2.32.3",
    "semantic-kernel>=1.25.0",
    "sendgrid>=6.11.0",
    "setuptools>=78.1.0",
    "smithery>=0.1.0",
    "speedtest-cli>=2.1.3",
    "watchdog>=6.0.0",
    "wikipedia>=1.4.0",
]

[project.entry-points."lineagent.algorithm.plugins"]
sql-lineage-agent = "algorithm.plugins.sql_lineage_agent.lineage_agent:get_plugin_info"
python-lineage-agent = "algorithm.plugins.python_lineage_agent.lineage_agent:get_plugin_info"
airflow-lineage-agent = "algorithm.plugins.airflow_lineage_agent.lineage_agent:get_plugin_info"
java-lineage-agent = "algorithm.plugins.java_lineage_agent.lineage_agent:get_plugin_info"
spark-lineage-agent = "algorithm.plugins.spark_lineage_agent.lineage_agent:get_plugin_info"

[project.scripts]
lineagentic = "cli.main:main"

[tool.setuptools.packages.find]
include = ["algorithm*", "cli*"]

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
]
